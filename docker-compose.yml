version: '2'

services:
  eureka-server:
    image: eureka-server:1.0
    build: eureka-server/
    restart: always
    network_mode: host
    hostname: localhost
    ports:
      - 8761:8761

  config-service:
    image: config-service:1.0
    build: config-server/
    restart: always
    network_mode: host
    hostname: localhost
    ports:
      - 8888:8888

  zuul-api:
    image: zuul-api:1.0
    build: zuul-api/
    depends_on:
      - config-service
      - eureka-server
      - registration-service
      - restaurant-logs-service
      - charity-logs-service
    restart: always
    network_mode: host
    hostname: localhost
    ports:
      - 8000:8000

  authentication-server:
    image: authentication-server:1.0
    build: authentication-server/
    depends_on:
      - zuul-api
      - mysql
      - rabbitmq
    restart: always
    network_mode: host
    hostname: localhost
    ports:
      - 8060:8060

  restaurant-logs-service:
    image: restaurant-logs-service:1.0
    build: restaurant-logs-server/
    depends_on:
      - mongo
      - rabbitmq
    restart: always
    network_mode: host
    hostname: localhost
    ports:
      - 8090:8090

  charity-logs-service:
    image: charity-logs-service:1.0
    build: charity-logs-server/
    depends_on:
      - mongo
      - rabbitmq
    restart: always
    network_mode: host
    hostname: localhost
    ports:
      - 8070:8070

  deliveryboy-logs-service:
    image: deliveryboy-logs-service:1.0
    build: deliveryBoy-logs-service/
    depends_on:
      - mongo
      - rabbitmq
    restart: always
    network_mode: host
    hostname: localhost
    ports:
      - 8040:8040

  registration-service:
    image: registration-service:1.0
    build: registration-server/
    depends_on:
      - mysql
      - rabbitmq
    restart: always
    network_mode: host
    hostname: localhost
    ports:
      - 8080:8080

  routing-service:
    image: routing-service:1.0
    build: routing-server/
    depends_on:
      - neo4j
      - rabbitmq
    restart: always
    network_mode: host
    hostname: localhost
    ports:
      - 8050:8050

#  mysql:
#    image: mysql:5.7
#    restart: always
#    network_mode: host
#    environment:
#      - MYSQL_USER=root
#      - MYSQL_ROOT_PASSWORD=Destiny1!
#    hostname: localhost
#    entrypoint:
#      sh -c "echo 'CREATE DATABASE IF NOT EXISTS authorizationService; CREATE DATABASE IF NOT EXISTS registrationService;' > /docker-entrypoint-initdb.d/init.sql;/usr/#local/bin/docker-entrypoint.sh --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci"
#    ports:
#      - 3306:3306
#    volumes:
#      - ../data/mysql:/var/lib/mysql

  mysql:
    image: mysql:5.7
    restart: always
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=Destiny1!
    container_name: mysql
    network_mode: host
    hostname: localhost
    entrypoint:
      sh -c "echo 'CREATE DATABASE IF NOT EXISTS authorizationService; CREATE DATABASE IF NOT EXISTS registrationService;' > /docker-entrypoint-initdb.d/init.sql;/usr/local/bin/docker-entrypoint.sh --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci"
#   volumes:
#     - ../data/mysql:/var/lib/mysql


  mongo:
    image: mongo
    restart: always
    hostname: localhost
    network_mode: host
    ports:
      - 27017:27017
#    volumes:
#      - ../data/mongo:/data/db

  rabbitmq:
    image: rabbitmq:3.7.5-management
    hostname: localhost
    network_mode: host
    ports:
      - 5672:5672
      - 15672:15672
#    volumes:
#      - ../data/rabbitmq:/var/lib/rabbitmq/mnesia/rabbit@app-rabbitmq:cached
    environment:
      RABBITMQ_ERLANG_COOKIE: 6085e2412b6fa88647466c6a81c0cea0
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: /

  neo4j:
    image: neo4j:3.0
    restart: always
    hostname: localhost
    network_mode: host
    ports:
      - 7474:7474
      - 7687:7687
    environment:
      - NEO4J_AUTH=neo4j/root123
#    volumes:
#      - ../data/neo4j/data:/data
#      - ../data/neo4j/logs:/logs

